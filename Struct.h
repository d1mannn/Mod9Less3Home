#pragma once
/*1.	Описать структуру с именем NOTE1, содержащую поля :
a.Name – фамилия и инициалы
b.TELE – номер телефона
c.DATE – дата рождения(год, месяц, число)

Написать программу, выполняющую :
•	ввод с клавиатуры данных в массив BLOCK, состоящий из 9 элементов типа NOTE1,
записи должны быть упорядочены по инициалам;
•	вывод на экран информации о людях, чьи дни рождения приходятся на месяц,
значение которого введено с клавиатуры; если такого человека нет – выдать сообщение.*/

struct names
{
	char lName[20];
	char fName[2];
	char mName[2];
};

struct DOF
{
	int day;
	int month;
	int year;
};

struct phonenumb
{
	int code;
	int numb;
	int numb2;
	int numb3;
};
struct NOTE1
{
	names Names;
	phonenumb TELE;
	DOF DATE;
};


/*2.	Описать структуру с именем TOVAR, содержащую поля :
a.название товара;
b.количество единиц товара;
c.стоимость товара;
d.дата поступления товара в виде структуры(год, месяц, день).

Написать функции :
•	создания массива SPISOK не более чем из 10 записей(структур) данных о товарах(ввод данных с клавиатуры);
•	вычисления средней стоимости товара;
•	расположения записей по возрастанию стоимости товаров;
•	вывода сведений о товарах, поступивших более 10 месяцев назад.*/


struct TOVAR
{
	char name[20];
	int count;
	int cost;
	DOF date;
};

/*3.	Описать структуру с именем MARSHRUT, содержащую поля :
a.номер маршрута;
b.начальный пункт маршрута;
c.конечный пункт маршрута;
d.длина маршрута.
Написать функции :
•	создания массива не более чем из 10 записей(структур) сведений о маршрутах(ввод данных с клавиатуры);
•	определения маршрута с максимальной длиной;
•	расположения записей по возрастанию номеров маршрутов;
•	вывода сведений о маршрутах, которые начинаются или заканчиваются в пункте, название которого вводится с клавиатуры.*/

struct ROUTE
{
	int numb;
	char departure[15];
	char destination[15];
	int length;
};

/*4.	Описать структуру с именем ABON, содержащую поля :
a.фамилия и инициалы абонента;
b.номер телефона;
c.дата подключения телефона в виде структуры(год, месяц, день);
d.начисленная сумма оплаты;
e.сумма на счету абонента
Написать функции :
•	создания массива не более чем из 12 записей(структур) данных об абонентах(ввод данных с клавиатуры);
•	расположения записей по алфавиту(с учетом инициалов для абонентов с одинаковыми фамилиями;
•	добавить 20 гр.на счета абонентов, которых подключили более 10 лет назад;
•	вывода сведений об абонентах, у которых сумма на счету отрицательная после вычета начислений;
•	вывода сведений об абоненте, номер телефона которого вводится с клавиатуры*/

struct ABON
{
	names Names;
	phonenumb TELE;
	DOF date;
	int debt;
	int sum;
};